{
  "New react component": {
    "prefix": ["rfc"],
    "body": [
      "interface $1Props extends React.HTMLAttributes<HTMLDivElement> {}",
      "",
      "export const $1 = (props: $1Props) => {",
      "  return (",
      "    <div>",
      "      <h1>Hello World</h1>",
      "    </div>",
      "  );",
      "};",
      ""
    ],
    "description": ""
  },
  "New story book using CSF syntax": {
    "prefix": ["csf"],
    "body": [
      "import * as React from 'react';",
      "import { $1 } from './$1';",
      "",
      "export default {",
      "  title: 'ui/$1',",
      "  component: $1,",
      "};",
      "",
      "export const Base = () => {",
      "  return <$1 />;",
      "};"
    ],
    "description": ""
  },
  "Create component with mobx observer & use local store hooks": {
    "prefix": ["reactnewmobx"],
    "body": [
      "import { useStore } from '@doltech/core';",
      "import { observer } from 'mobx-react-lite';",
      "import * as React from 'react';",
      "import styled from 'styled-components';",
      "",
      "interface Observed$1Props extends React.HTMLAttributes<HTMLDivElement> {}",
      "",
      "const Observed$1Base = (props: $Observed$1Props) => {",
      "  const { $2 } = useStore();",
      "",
      "  return (",
      "    <div>",
      "      <h1>Hello World</h1>",
      "    </div>",
      "  );",
      "};",
      "",
      "export const Observed$1 = observer(Observed$1Base);"
    ],
    "description": ""
  }
}
